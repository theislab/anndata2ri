[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-vcs", "hatchling" ]

[project]
name = "anndata2ri"
readme = "README.rst"
authors = [
    { name = "Philipp A.", email = "flying-sheep@web.de" },
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: R",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dynamic = [ "version" ]
dependencies = [
    "anndata",
    "rpy2>=3.5.2", # first with get_conversion
    "tzlocal",     # for pandas2ri
]

optional-dependencies.dev = [ "pre-commit", "scipy-stubs" ]
optional-dependencies.doc = [
    "ipython",
    "lxml",                       # For scraping the R link info
    "scanpydoc[theme,typehints]",
    "sphinx",
]
optional-dependencies.test = [
    "pygments",
    "pytest",
    "pytest-faulthandler",
    "scanpy",
]
urls.'Documentation' = "https://icb-anndata2ri.readthedocs-hosted.com/"
urls.'Issue Tracker' = "https://github.com/theislab/anndata2ri/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc"
urls.'Source Code' = "https://github.com/theislab/anndata2ri"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" } # be able to publish dev version

[tool.hatch.build.hooks.vcs]
version-file = "src/anndata2ri/_version.py"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.docs]
features = [ "doc" ]
scripts.build = "sphinx-build -M html docs docs/_build"
scripts.open = "python3 -m webbrowser -t docs/_build/html/index.html"
scripts.clean = "git clean -fdX -- {args:docs}"

[tool.hatch.envs.hatch-test]
features = [ "test", "dev" ]
extra-dependencies = [ "ipykernel" ]

[tool.ruff]
line-length = 120
format.quote-style = "single"
lint.select = [ "ALL" ]
lint.ignore = [
    "C408",    # dict() calls are nice
    "COM812",  # trailing commas handled by black
    "D203",    # prefer 0 to 1 blank line before class members
    "D213",    # prefer docstring summary on first line
    "FIX002",  # “TODO” comments
    "PLR0913", # having many (kw)args is fine
    "Q",       # handled by formatter
    "S101",    # asserts are fine
]
lint.per-file-ignores.'**/*.ipynb' = [
    "F821", # `%%R -o` means that ruff doesn’t understand which variables exist
    "T201", # Allow print in notebooks
]
lint.per-file-ignores.'docs/**/*.py' = [ "INP001" ] # No __init__.py in docs
lint.per-file-ignores.'src/**/*.py' = [ "PT" ] # No Pytest checks
lint.per-file-ignores.'tests/**/*.py' = [
    "D100",    # test modules don’t need docstrings
    "D103",    # tests don’t need docstrings
    "INP001",  # No __init__.py in tests
    "PD901",   # “df” is a fine var name in tests
    "PLR2004", # magic numbers are fine in tests
]
lint.allowed-confusables = [ "×", "’" ]
lint.isort.known-first-party = [ "anndata2ri" ]
lint.isort.lines-after-imports = 2
lint.isort.required-imports = [ "from __future__ import annotations" ]
lint.pydocstyle.convention = "numpy"

[tool.pyproject-fmt]
indent = 4

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-panndata2ri.test_utils",
    "-Werror",
]
